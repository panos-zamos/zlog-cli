#!/bin/bash
#
# zLog - lb (logbook):
# logbook create .md file with current Ymd and opens it in editor
#
# Copyright (c) 2019 - Panajotis Zamos <panos@holisticagency.com>
#
# Built with shell-script-skeleton v0.0.3 <http://github.com/z017/shell-script-skeleton>
#
# TODO:
# - [ ] check default folder if exists
# - [ ] add -m for message (or some other system to add a message in a lb call)
# - [ ] enable multiple arguments


RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

folder="/home/$USER/Dropbox/logbook/"
main_tag=""
date_name=$(date '+%Y-%m-%d')
name_suffix=''

############################################################
# Process the input options. Add options as needed.        #
#   from: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash#answer-33826763
############################################################

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -y) date_name=$(date -d "yesterday 13:00" '+%Y-%m-%d'); y=1 ;;
        -yy) date_name=$(date -d "-2 day 13:00" '+%Y-%m-%d'); y=2 ;;
        -n|--name) name_suffix="$2"; shift ;;
        *) main_tag="$1"
        # *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

############################################################
# Main program                                             #
############################################################

# if [ $2 ] ;then
#     if [ "$2" == -y ];then
#         date_name=$(date -d "yesterday 13:00" '+%Y-%m-%d')
#         in_place='if 2'
#     fi
# fi

# if [ $1 ] ;then
#     if [ "$1" == -y ];then
#         date_name=$(date -d "yesterday 13:00" '+%Y-%m-%d')
#         in_place="if 1"
#     else
      if [ -d "$folder$main_tag/" ];then
          folder="$folder$main_tag/"
      else
          echo
          printf "No logbook for ${YELLOW}${main_tag}${NC}, I will create that for you [${YELLOW}$folder$main_tag${NC}]."
          echo
          read -p "Do you want to continue? [y/N]" -n 1 -r
          if [[ $REPLY =~ ^[Yy]$ ]];then
              echo
              mkdir -p -- "$folder$main_tag"
              if [ -d "$folder$main_tag" ]; then
                  echo
                  printf "Folder for ${YELLOW}$main_tag${NC} created [${YELLOW}$folder$main_tag${NC}]"
                  folder="$folder$main_tag/"
                  echo
              else
                  printf "${RED}Fail to create '$folder$main_tag'. Aborting!${NC}"
                  [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
              fi
          else
              echo
              echo "Abort."
              [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
          fi
      fi
#     fi
# fi

#echo -e "\n---------------E-N-D------------------\n\n"
#[[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell

ext=".md"

fullname="$folder$date_name$name_suffix$ext"

if [ -e "$fullname" ];then
    line=$(head -n 1 "$fullname")
    if [ "$line" ]; then
        sed -i '1s/^/\n/' $fullname
    fi
else
    touch $fullname
fi

#echo "in place: $date_name"
#echo "fullname: $fullname"
#echo "name_suffix: $name_suffix"
#echo "all args: $0"

editor $fullname

